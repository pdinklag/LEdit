Pointers (2 bytes each, bank is 0x85) to OpCode handlers.
[$BB] = Pointer (in bank 0x85) to current L2BASM byte

$85:B485 = 0x2B485

Handlers:

OpCode	SNES	ROM			Additional Bytes Read
==========================================================
0x00	85B475	0x02B475	0
0x01	85B53F	0x02B53F	0
0x02	85B552	0x02B552	0
0x03	85B553	0x02B553	2
0x04	85B562	0x02B562	2
0x05	85B584	0x02B584	3
0x06	85B59A	0x02B59A	5
0x07	85B5AF	0x02B5AF	5
0x08	85B5C4	0x02B5C4	5
0x09	85B5E9	0x02B5E9	5
0x0A	85B60C	0x02B60C	5
0x0B	85B62F	0x02B62F	5
0x0C	85B672	0x02B672	3
0x0D	85B67E	0x02B67E	3
0x0E	85B69A	0x02B69A	3
0x0F	85B6B9	0x02B6B9	3
0x10	85B6D4	0x02B6D4	3
0x11	85B73D	0x02B73D	1
0x12	85B755	0x02B755	2
0x13	85B77D	0x02B77D
0x14	85B7AA	0x02B7AA
0x15	85B7D1	0x02B7D1
0x16	85B84B	0x02B84B
0x17	85B866	0x02B866
0x18	85B881	0x02B881
0x19	85B89C	0x02B89C
0x1A	85B8B6	0x02B8B6
0x1B	85B8CE	0x02B8CE
0x1C	85B8ED	0x02B8ED	2
0x1D	85B906	0x02B906	0
0x1E	85B90D	0x02B90D	1
0x1F	85B921	0x02B921	2
0x20	85B92E	0x02B92E
0x21	85B93F	0x02B93F	5
0x22	85B970	0x02B970
0x23	85B9BA	0x02B9BA
0x24	85B9DC	0x02B9DC
0x25	85BA04	0x02BA04
0x26	85BA2A	0x02BA2A
0x27	85BA49	0x02BA49
0x28	85BA66	0x02BA66	0
0x29	85BA83	0x02BA83
0x2A	85BA8C	0x02BA8C
0x2B	85BA95	0x02BA95
0x2C	85BAA8	0x02BAA8	1
0x2D	85BB17	0x02BB17
0x2E	85BB48	0x02BB48	0
0x2F	85BB51	0x02BB51
0x30	85BB80	0x02BB80
0x31	85BBA3	0x02BBA3
0x32	85BBA4	0x02BBA4	1
0x33	85BCCF	0x02BCCF
0x34	85BCD0	0x02BCD0
0x35	85BCD1	0x02BCD1
0x36	85BCDA	0x02BCDA
0x37	85BCEF	0x02BCEF
0x38	85BD2D	0x02BD2D
0x39	85BD2D	0x02BD2D
0x3A	85BD2D	0x02BD2D
0x3B	85BD2D	0x02BD2D
0x3C	85BD2E	0x02BD2E
0x3D	85BD56	0x02BD56	1
0x3E	85BD60	0x02BD60
0x3F	85B654	0x02B654
0x40	85B8F9	0x02B8F9
0x41	85BD70	0x02BD70
0x42	85BD79	0x02BD79
0x43	85BDB4	0x02BDB4
0x44	85BDCD	0x02BDCD	2
0x45	85BDDC	0x02BDDC
0x46	85BDF5	0x02BDF5	3
0x47	85BE08	0x02BE08
0x48	85BE15	0x02BE15
0x49	85BE1C	0x02BE1C
0x4A	85BE2D	0x02BE2D
0x4B	85BE45	0x02BE45
0x4C	85BE4E	0x02BE4E	1
0x4D	85BE58	0x02BE58
0x4E	85B81E	0x02B81E
0x4F	85B478	0x02B478
0x50	85BE6A	0x02BE6A	0
0x51	85BE7F	0x02BE7F
0x52	85BE98	0x02BE98
0x53	85BEC1	0x02BEC1
0x54	85BEDC	0x02BEDC
0x55	85B71F	0x02B71F
0x56	85BE24	0x02BE24
0x57	85BEF7	0x02BEF7
0x58	85BF99	0x02BF99
0x59	85BFA0	0x02BFA0
0x5A	85BFA7	0x02BFA7	1
0x5B	85BFB0	0x02BFB0
0x5C	85BFB8	0x02BFB8

Interesting:


$85:BFC1 - Subroutine that reads 1 byte from [$BB] and increases $BB by 1
$85:BFCC - Subroutine that reads 1 word (2 bytes) from [$BB] and increases $BB by 2
$85:BFDA - Subroutine that reads 1 word (2 bytes) from [$BB] and increases $BB by 2 and does more funny stuff

JMP $B460 => End of handler, handle next instruction

Standard sword attack flow:
1. (Maxim) Script at 0x2EF2A
2. Monster Defend Script
3. Item Attack Script